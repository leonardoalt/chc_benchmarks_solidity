(set-option :produce-models true)
(set-logic ALL)
(declare-fun |error_0| () Int)
(declare-fun |this_0| () Int)
(declare-datatypes ((|state_type| 0)) (((|state_type| (|balances| (Array Int Int))))))
(declare-fun |state_0| () |state_type|)
(declare-datatypes ((|bytes_tuple| 0)) (((|bytes_tuple| (|bytes_tuple_accessor_array| (Array Int Int)) (|bytes_tuple_accessor_length| Int)))))
(declare-datatypes ((|tx_type| 0)) (((|tx_type| (|block.basefee| Int) (|block.chainid| Int) (|block.coinbase| Int) (|block.difficulty| Int) (|block.gaslimit| Int) (|block.number| Int) (|block.timestamp| Int) (|blockhash| (Array Int Int)) (|msg.data| |bytes_tuple|) (|msg.sender| Int) (|msg.sig| Int) (|msg.value| Int) (|tx.gasprice| Int) (|tx.origin| Int)))))
(declare-fun |tx_0| () |tx_type|)
(declare-datatypes ((|ecrecover_input_type| 0)) (((|ecrecover_input_type| (|hash| Int) (|v| Int) (|r| Int) (|s| Int)))))
(declare-datatypes ((|crypto_type| 0)) (((|crypto_type| (|ecrecover| (Array |ecrecover_input_type| Int)) (|keccak256| (Array |bytes_tuple| Int)) (|ripemd160| (Array |bytes_tuple| Int)) (|sha256| (Array |bytes_tuple| Int))))))
(declare-fun |crypto_0| () |crypto_type|)
(declare-datatypes ((|abi_type| 0)) (((|abi_type|))))
(declare-fun |abi_0| () |abi_type|)
(declare-fun |expr_11_0| () Int)
(declare-fun |expr_12_length_pair_0| () |bytes_tuple|)
(declare-datatypes ((|struct C.S| 0)) (((|struct C.S| (|struct C.S_accessor_a| Int) (|struct C.S_accessor_b| Int)))))
(declare-fun |expr_13_1| () |struct C.S|)
(declare-fun |expr_14_1| () Int)
(declare-fun |expr_17_0| () Int)
(declare-fun |expr_18_1| () Int)
(declare-fun |expr_19_1| () Bool)
(declare-fun |expr_24_0| () Int)
(declare-fun |expr_25_length_pair_0| () |bytes_tuple|)
(declare-fun |expr_26_1| () |struct C.S|)
(declare-fun |expr_27_1| () Int)
(declare-fun |expr_28_0| () Int)
(declare-fun |expr_29_1| () Bool)

(assert (and (and (and true true) (and (= expr_29_1 (= expr_27_1 expr_28_0)) (and (=> (and true true) true) (and (= expr_28_0 0) (and (=> (and true true) (and (>= expr_27_1 (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= expr_27_1 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (= expr_27_1 (|struct C.S_accessor_a| expr_26_1)) (and (= 0 (|struct C.S_accessor_b| expr_26_1)) (and (= expr_24_0 (|struct C.S_accessor_a| expr_26_1)) (and (= (|bytes_tuple_accessor_length| expr_25_length_pair_0) 0) (and (=> (and true true) true) (and (= expr_24_0 2) (and (= expr_19_1 (= expr_14_1 expr_18_1)) (and (=> (and true true) (and (>= expr_18_1 0) (<= expr_18_1 1099511627775))) (and (= expr_18_1 expr_17_0) (and (=> (and true true) true) (and (= expr_17_0 0) (and (=> (and true true) (and (>= expr_14_1 0) (<= expr_14_1 1099511627775))) (and (= expr_14_1 (|struct C.S_accessor_b| expr_13_1)) (and (= 0 (|struct C.S_accessor_b| expr_13_1)) (and (= expr_11_0 (|struct C.S_accessor_a| expr_13_1)) (and (= (|bytes_tuple_accessor_length| expr_12_length_pair_0) 0) (and (=> (and true true) true) (and (= expr_11_0 2) (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (|block.basefee| tx_0) 0) (<= (|block.basefee| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= (|block.chainid| tx_0) 0) (<= (|block.chainid| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|block.coinbase| tx_0) 0) (<= (|block.coinbase| tx_0) 1461501637330902918203684832716283019655932542975))) (and (>= (|block.difficulty| tx_0) 0) (<= (|block.difficulty| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|block.gaslimit| tx_0) 0) (<= (|block.gaslimit| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|block.number| tx_0) 0) (<= (|block.number| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|block.timestamp| tx_0) 0) (<= (|block.timestamp| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|msg.sender| tx_0) 0) (<= (|msg.sender| tx_0) 1461501637330902918203684832716283019655932542975))) (and (>= (|msg.value| tx_0) 0) (<= (|msg.value| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= (|tx.origin| tx_0) 0) (<= (|tx.origin| tx_0) 1461501637330902918203684832716283019655932542975))) (and (>= (|tx.gasprice| tx_0) 0) (<= (|tx.gasprice| tx_0) 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (and (and (and (and (and (= (|msg.value| tx_0) 0) (= (|msg.sig| tx_0) 638722032)) (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 0) 38)) (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 1) 18)) (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 2) 31)) (= (select (|bytes_tuple_accessor_array| (|msg.data| tx_0)) 3) 240)) (>= (|bytes_tuple_accessor_length| (|msg.data| tx_0)) 4))) true)))))))))))))))))))))))) (not expr_29_1)))
(check-sat)
